services:
  postgres:
    image: postgres:15-alpine
    container_name: qdocument_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-qdocument_qa}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-qdocument_qa}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: qdocument_api
    environment:
      # Database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-qdocument_qa}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      
      # API Keys (Only Claude required)
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      
      # Application
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      UPLOAD_DIR: /app/uploads
      CHROMA_DB_PATH: /app/chroma_db
      
      # CORS
      ALLOWED_ORIGINS: '["http://localhost:3000", "http://frontend:80", "http://localhost"]'
    volumes:
      - uploads_data:/app/uploads
      - chroma_data:/app/chroma_db
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qdocument_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
  chroma_data:
    driver: local

networks:
  default:
    name: qdocument_network
